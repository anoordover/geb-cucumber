/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 the original author or authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: "com.github.samueltbrown.cucumber"


dependencies {
    providedCompile 'javax.servlet:servlet-api:2.5'
    compile 'org.shamdata:sham:0.3'

    testCompile project(':')
    testCompile "org.codehaus.groovy:groovy:$groovyVersion"
    testCompile "org.gebish:geb-core:$gebVersion"
    testCompile 'info.cukes:cucumber-groovy:1.2.2'
    testCompile "io.jdev.cucumber:cucumber-variables:$cucumberVariablesVersion"

    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

}

// TODO: implement nicer way to do this, probably reading GebConfig
task cucumberSetup << {
    System.setProperty("geb.cucumber.step.packages", "pages")
}

task jettyStart(type: JettyRun) {
    daemon = true
}

cucumber.dependsOn ([':compileGroovy', jettyStart, cucumberSetup])
check.dependsOn(cucumber)

cucumber {
    formats = ['asyougo']
    glueDirs = [
        'classpath:io.jdev.geb.cucumber.steps.groovy.nl',
        'classpath:io.jdev.cucumber.variables.groovy.nl',
        'classpath:teststeps'
    ]
    featureDirs = ["$project.projectDir/src/cucumber/features".toString()]
    if(project.hasProperty('cucumberTags')) {
        tags = cucumberTags.split(",") as List
    }
}